{"file":"/home/heroku/Projects/Studying/NestJS/nestjs-task-managemenet/backend/src/auth/jwt.stategy.ts","mappings":";;;;;;;;;;;;;;AAAA,+CAAmD;AACnD,+CAAkD;AAClD,2CAAkE;AAElE,6CAAkD;AAClD,uDAAkD;AAKlD,IAAa,UAAU,GAAvB,MAAa,UAAW,SAAQ,2BAAgB,CAAC,uBAAQ,CAAC;IACzD,YAES,cAA8B;QAEtC,KAAK,CAAC;YACL,cAAc,EAAE,yBAAU,CAAC,2BAA2B,EAAE;YACxD,WAAW,EAAE,aAAa;SAC1B,CAAC,CAAA;QALM,mBAAc,GAAd,cAAc,CAAgB;IAMvC,CAAC;IAED,KAAK,CAAC,QAAQ,CAAC,OAAmB;QACjC,MAAM,EAAE,QAAQ,EAAE,GAAG,OAAO,CAAA;QAC5B,MAAM,IAAI,GAAE,MAAM,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAA;QAE3D,IAAG,CAAC,IAAI,EAAE;YACT,MAAM,IAAI,8BAAqB,EAAE,CAAA;SACjC;QAED,OAAO,IAAI,CAAA;IACZ,CAAC;CACD,CAAA;AArBY,UAAU;IADtB,mBAAU,EAAE;IAGV,WAAA,0BAAgB,CAAC,gCAAc,CAAC,CAAA;qCACT,gCAAc;GAH3B,UAAU,CAqBtB;AArBY,gCAAU","names":[],"sources":["/home/heroku/Projects/Studying/NestJS/nestjs-task-managemenet/backend/src/auth/jwt.stategy.ts"],"sourcesContent":["import { PassportStrategy } from '@nestjs/passport'\nimport { Strategy, ExtractJwt} from 'passport-jwt'\nimport { Injectable, UnauthorizedException } from '@nestjs/common'\nimport { JwtPayload } from './jwt-payload.interface'\nimport { InjectRepository } from '@nestjs/typeorm'\nimport { UserRepository } from './user.repository'\nimport { User } from './user.entity'\n\n\n@Injectable()\nexport class JwtStategy extends PassportStrategy(Strategy) {\n\tconstructor(\n\t\t@InjectRepository(UserRepository)\n\t\tprivate userRepository: UserRepository\n\t) {\n\t\tsuper({\n\t\t\tjwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n\t\t\tsecretOrKey: 'topSecret51',\n\t\t})\n\t}\n\n\tasync validate(payload: JwtPayload): Promise<User> {\n\t\tconst { username } = payload\n\t\tconst user =await this.userRepository.findOne({ username })\n\n\t\tif(!user) {\n\t\t\tthrow new UnauthorizedException()\n\t\t}\n\n\t\treturn user\n\t}\n}"],"version":3}